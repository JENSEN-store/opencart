name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  #pull_request:
   # types:
    #  - closed

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:

      - name: Start minikube
        uses: medyagh/setup-minikube@master
        id: minikube
        with:
          driver: docker
          wait: all
      - name: Try the cluster
        run: kubectl get pods -A
      - name: Setup Docker environment
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
      - name: Print current app version
        run: |
          echo "current_version=$(grep '# version' version.md | cut -d ' ' -f3)" >> $GITHUB_ENV
          echo "Current version: ${{ env.current_version }}"
      - name: Generate Modified Deployment YAML
        run: |
          sed -e "s/microservice1:1.0.0/microservice1:${{ env.current_version }}/g" deployment-service1.yaml > modified-deployment-service1.yaml
          sed -e "s/microservice2:1.0.0/microservice1:${{ env.current_version }}/g" deployment-service2.yaml > modified-deployment-service2.yaml
      - name: Build microservice1 image
        run: |
          eval $(minikube -p minikube docker-env)
          docker build -f ./service1/Dockerfile -t microservice1:${{ env.current_version }} ./service1
      - name: Build microservice2 image
        run: |
          eval $(minikube -p minikube docker-env)
          docker build -f ./service2/Dockerfile -t microservice2:${{ env.current_version }} ./service2
      - name: Print docker images
        run: |
          eval $(minikube -p minikube docker-env)
          docker images


      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1.6.0  # Use the latest version
    
      - name: Login to Docker Hub
        uses: docker/login-action@v1.10.0  # Use the latest version
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: docker build -t draginojd/jensenstore:00 .